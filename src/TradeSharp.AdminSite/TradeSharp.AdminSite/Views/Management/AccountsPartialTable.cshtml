@using TradeSharp.SiteAdmin.App_GlobalResources
@using TradeSharp.Contract.Entity
@using TradeSharp.SiteAdmin.Controllers
@using TradeSharp.SiteAdmin.Helper
@using TradeSharp.SiteAdmin.Models
@using TradeSharp.Util
@model AccountViewModel    

<img id="imgLoading" class="ui-progressbar" style="width: 64px; height: 64px; background-position:center; position: fixed" src="~/images/table/loading.gif" />
@using (Ajax.BeginForm("Accounts", "Management", new AjaxOptions { HttpMethod = "Post" }, new { id = "TableForm", name = "TableForm" }))
{
    if (!string.IsNullOrEmpty(ManagementController.ResultMessage))
    {
        <div id="dialogResult" title="@Resource.TitleHeaderDialogResult">
            <p>@ManagementController.ResultMessage</p>
        </div>
        @(ManagementController.ResultMessage = string.Empty)
    }
    <table id="content_table">
        <tr>
            <th rowspan="3" class="sized">
                <img src="~/images/shared/side_shadowleft.jpg" width="20" class="shadow" alt="" /></th>
            <th class="topleft"></th>
            <td id="tbl-border-top">&nbsp;</td>
            <th class="topright"></th>
            <th rowspan="3" class="sized">
                <img src="~/images/shared/side_shadowright.jpg" width="20" class="shadow" alt="" /></th>
        </tr>
        <tr>
            <td id="tbl-border-left"></td>
            <td>
                <!--  start content_table_inner ...................................................................... START -->
                <div id="content_table_inner">
                    <div style="">                        
                        @Html.ActionLink(Resource.TitleRefresh, "Accounts", null, new
                   {
                       id = "refrashLink",
                       style = "float:none; display:inline; padding:8px;",
                       @class = "ml-button-3"
                   })
                        @Html.ActionLink(Resource.TitleNewAccount, "AccountAdd", null, new
                   {
                       id = "addAccountLink",
                       style = "float:none; display:inline; padding:8px;",
                       @class = "ml-button-3"
                   })
                        @Html.ActionLink(Resource.TitlePositionList, "PositionList", "Management", new { accountId = -1 }, new
                   {
                       style = "float:none; display:inline; padding:8px;",
                       @class = "ml-button-3"
                   })
                        <br/><br/>
                        <table id="product_table">
                            <tr>
                                <th  class="table-header-repeat line-left minwidth-1">
                                    <span >
                                        <a  id="SortId" class="table-header-sotr-text" href="javascript:void(0);">
                                            @if (Model.SortColName != null && Model.SortColName.Select(x => x.Key).Contains("SortId"))
                                            {
                                                if (Model.SortColName.First(x => x.Key == "SortId").Value == 1)
                                                {
                                                    <img src="../images/table/sort_ascending.png" style="margin-right: 15px; width: 16px; height: 16px;"/>
                                                }
                                                else
                                                {
                                                    <img src="../images/table/sort_descending.png" style="margin-right: 15px; width: 16px; height: 16px;"/>
                                                }
                                            }
                                            @Resource.TitleAccount
                                        </a>
                                        <a  id="FilterIdOpener" class="table-header-filter-sotr" href="javascript:void(0);" ><img src="../images/table/filter.png"/></a>
                                    </span>
                                </th>
                                <th class="table-header-repeat line-left minwidth-1">
                                    <span>
                                        <a  id="SortGroup" class="table-header-sotr-text" href="javascript:void(0);">
                                            @if (Model.SortColName != null && Model.SortColName.Select(x => x.Key).Contains("SortGroup"))
                                            {
                                                if (Model.SortColName.First(x => x.Key == "SortGroup").Value == 1)
                                                {
                                                    <img src="../images/table/sort_ascending.png" style="margin-right: 15px; width: 16px; height: 16px;"/>
                                                }
                                                else
                                                {
                                                    <img src="../images/table/sort_descending.png" style="margin-right: 15px; width: 16px; height: 16px;"/>
                                                }
                                            }  
                                            @Resource.TitleAccountGroup 
                                        </a> 
                                        <a  id="FilterGroupOpener" class="table-header-filter-sotr" href="javascript:void(0);" ><img src="../images/table/filter.png"/></a>                                               
                                    </span>
                                </th>
                                <th class="table-header-repeat line-left">
                                    <span>
                                        <a  id="SortBalance" class="table-header-sotr-text"  href="javascript:void(0);" >
                                            @if (Model.SortColName != null && Model.SortColName.Select(x => x.Key).Contains("SortBalance"))
                                            {
                                                if (Model.SortColName.First(x => x.Key == "SortBalance").Value == 1)
                                                {
                                                    <img src="../images/table/sort_ascending.png" style="margin-right: 15px; width: 16px; height: 16px;"/>
                                                }
                                                else
                                                {
                                                    <img src="../images/table/sort_descending.png" style="margin-right: 15px; width: 16px; height: 16px;"/>
                                                }
                                            }
                                            @Resource.TitleBalance
                                        </a> 
                                        <a  id="FilterBalanceOpener" class="table-header-filter-sotr" href="javascript:void(0);" ><img src="../images/table/filter.png"/></a>
                                    </span>
                                </th>
                                <th class="table-header-repeat line-left">
                                    <span>
                                        <a  id="SortOwners" class="table-header-sotr-text" href="javascript:void(0);" >
                                            @if (Model.SortColName != null && Model.SortColName.Select(x => x.Key).Contains("SortOwners"))
                                            {
                                                if (Model.SortColName.First(x => x.Key == "SortOwners").Value == 1)
                                                {
                                                    <img src="../images/table/sort_ascending.png" style="margin-right: 25px; width: 16px; height: 16px;"/>
                                                }
                                                else
                                                {
                                                    <img src="../images/table/sort_descending.png" style="margin-right: 25px; width: 16px; height: 16px;"/>
                                                }
                                            }
                                            @Resource.TitleAccountOwners
                                        </a> 
                                        <a  id="FilterOwnersOpener" class="table-header-filter-sotr" href="javascript:void(0);" ><img src="../images/table/filter.png"/></a>
                                    </span>
                                </th >
                                <td class="table-header-repeat line-left"><span>@Resource.TitleManage</span></td>
                            </tr>
                            @foreach (var item in Model.CurrentPageItems)
                            {
                                <tr >
                                    <td>@Html.ActionLink(item.Id.ToString(), "AccountDetails", new { accountId = item.Id }, new { @class = "table-item" })</td>
                                    <td>@item.Group</td>
                                    <td>@item.BalanceString</td>
                                    <td class="options-width">
                                        @foreach (var owner in item.OwnersNameId)
                                        {
                                            @Html.ActionLink(owner.Value, "OwnerDetails", new { ownerId = owner.Key }, new { @class = "table-item" })
                                        }
                                    </td>
                                    <td><select onchange="performActionOnAccount(@item.Id, $(this).val());" class="chzn-select" >
                                            <option value="nothing"> - </option>
                                            <option value="balance">@Resource.TitleDeposit</option>
                                            <option value="correctBalance">@Resource.TitleCorrectBalance</option>
                                            <option value="deactivate">@Resource.TitleDeactivateAccount</option>
                                            <option value="delete">@Resource.TitleDeleteAccount</option>
                                        </select>
                                    </td>
                                </tr>
                            }
                        </table>
                        <div style="color: #807C7D; vertical-align:middle;">
                            
                            @Html.HiddenFor(x => x.StrSortColName)
                            @Html.HiddenFor(x => x.PageNomber) 
                            &nbsp;
                            @if (Model.CurrentPageItems.HasPreviousPage)
                            {
                                <a id="PagingFirst" data-item="0" href="~/Management/Accounts">
                                    <img src="~/images/table/firstPage.png" alt=""/></a>
                                @Html.Raw("&nbsp;")
                                <a id="PagingPrev" data-item="@(Model.CurrentPageItems.PageIndex - 1)" href="~/Management/Accounts">
                                    <img src="~/images/table/previousPage.png" alt=""/></a> 
                            }
                            else
                            {
                                <img src="~/images/table/paging_far_left.gif" />
                                @Html.Raw("&nbsp;")
                                <img src="~/images/table/paging_left.gif" />
                            }
                            &nbsp;
                            @Resource.TitlePage @(Model.CurrentPageItems.PageNumber) @Resource.TitleOf @Model.CurrentPageItems.PageCount
                            &nbsp;
                            @if (Model.CurrentPageItems.HasNextPage)
                            { 
                                <a id="PagingNext" data-item="@(Model.CurrentPageItems.PageIndex + 1)" href="~/Management/Accounts">
                                    <img src="~/images/table/nextPage.png" alt=""/></a>
                                @Html.Raw("&nbsp;")
                                <a id="PagingLast" data-item="@(Model.CurrentPageItems.PageCount - 1)" href="~/Management/Accounts">
                                    <img src="~/images/table/lastPage.png" alt=""/></a>
                            }
                            else
                            {
                                <img src="~/images/table/paging_right.gif" />
                                @Html.Raw("&nbsp;")
                                <img src="~/images/table/paging_far_right.gif" />
                            }
                            
                            <div style="float: right;vertical-align:middle;">
                                @Resource.TitleRecordPage
                                @Html.DropDownListFor(x => x.CurrentPageSize, new SelectList(Model.PageSizeItems),
                                                      new { @id = "CurrentPageSize", @class = "chzn-select", @style = "width:150px;" })
                            </div>
                        </div>
                    </div>
                    <div class="clear"></div>
                </div>
                <!--  end content_table_inner ............................................END  -->
            </td>
            <td id="tbl-border-right"></td>
        </tr>
        <tr>
            <th class="sized bottomleft"></th>
            <td id="tbl-border-bottom">&nbsp;</td>
            <th class="sized bottomright"></th>
        </tr>
    </table>
}@* Закрытие формы*@
    
<!--  Filter dialog -->
<div id="filterIdDialog" title="@Resource.TitleAccount">
    <p>@Resource.TitleAccount</p>
    @Html.TextBoxFor(x => x.FilterId)
</div>
<div id="filterGroupDialog" title="@Resource.TitleAccountGroup">
    <p>@Resource.TitleAccountGroup</p>
    @Html.DropDownListFor(x => x.FilterGroup, new SelectList(Model.FilterGroups, "Value", "Text"), new { @id = "filterGroup" })
</div>
<div id="filterBalanceDialog" title="@Resource.TitleBalance">
    <p>@Resource.TitleLowerLimit</p>
    @Html.TextBoxFor(x => x.FilterBalanceLower)
    <p>@Resource.TitleUpperLimit</p>
    @Html.TextBoxFor(x => x.FilterBalanceUpper)
    <p>@Resource.TitleCurrency</p>
    @Html.DropDownListFor(x => x.FilterBalanceTicker, new SelectList(Model.FilterBalanceTickers, "Value", "Text"), new { @id = "filterBalanceTicker", @style = "width:135px;" })
</div>
<div id="filterOwnersDialog" title="@Resource.TitleAccountOwners">
    <p>@Resource.TitleAccountOwners</p>
    @Html.TextBoxFor(x => x.FilterOwners, new { style = "width:100px" })
</div>
<!--  Filter dialog and-->

<!-- Всплывающие окошки диалогов -->
<div id="dialog-modal" title="Empty" style="display: none">
</div>

<!-- "Окно" пополнения счета -->
<div id="balanceChangeDiv" class="item_edit_div">
    <input type="hidden" id="@AjaxFieldHelper.EditFieldId((BalanceChangeRequest s) => s.AccountId)" value=""/>
    <table>
        <tr>
            <td>@Resource.TitleTypeTransaction</td>
            <td>@Html.DropDownList("editChangeType",
                                   Enum.GetValues(typeof(BalanceChangeType)).Cast<BalanceChangeType>().
                                   Select(v => new SelectListItem { Text = EnumFriendlyName<BalanceChangeType>.GetString(v), Value = v.ToString() }),
                                   new { @class = "chzn-select", @style = "width:150px;" })</td>
        </tr>
        <tr>
            <td>@Resource.TitleAmmount</td>
            <td>
                @AjaxFieldHelper.Input((BalanceChangeRequest s) => s.Amount, new { @style = "width:150px;" })
            </td>
        </tr>
        <tr>
            <td>@Resource.TitleComment</td>
            <td>@AjaxFieldHelper.Input((BalanceChangeRequest s) => s.Description, new { @style = "width:150px;" })</td>
        </tr>
        <tr>
            <td>@Resource.TitleDate</td>
            <td>@AjaxFieldHelper.Input((BalanceChangeRequest s) => s.ValueDate, new { @style = "width:150px;" })</td>
        </tr>
    </table>
    <br />
    <a href="javascript:void(0);" class="ml-button-3" style="float:none; display:inline; padding:8px;" onclick="if (!requestAccountBalanceChange()) return; $('#balanceChangeDiv').css('display', 'none');">@Resource.TitleAccept</a>
    &nbsp;&nbsp;
    <a href="javascript:void(0);" class="ml-button-3" style="float:none; display:inline; padding:8px;" onclick="$('#balanceChangeDiv').css('display', 'none');">@Resource.TitleCancel</a>
</div>
<!-- X"Окно" пополнения счета -->

<script type="text/javascript">
    function performActionOnAccount(accountId, action) {
        if (action == 'balance') changeAccountBalance(accountId);
        if (action == 'deactivate') {
            window.location.href = '/Management/DeactivateAccount?accountId=' + accountId;
        }
        if (action == 'correctBalance') {
            if (confirm("@Resource.ConfirmLongOperation"))
                window.location.href = '/Management/CorrectBalance?accountId=' + accountId;
        }
        if (action == 'delete') {
            if (confirm("@Resource.ConfirmDellAccount"))
                window.location.href = '/Management/DeleteAccount?accountId=' + accountId;
        }
    }

    function changeAccountBalance(accountId) {
        // очистить DIV, сохранить номер счета и показать DIV
        $('#balanceChangeDiv').find('input').val('');
        $('#@AjaxFieldHelper.EditFieldId((BalanceChangeRequest s) => s.ValueDate)').val(formatDateTime(new Date()));
        $('#@AjaxFieldHelper.EditFieldId((BalanceChangeRequest s) => s.AccountId)').val(accountId);
        letDivFloat('balanceChangeDiv');
        // маленький хак - select криво рендерится сторонним скриптом, не понимает ширину, ибо изначально скрыт
        $('#editChangeType_chzn').width(150);
    }
    
    function requestAccountBalanceChange() {
        
        @AjaxFieldHelper.JsonToBePost(typeof(BalanceChangeRequest), "balanceChangeDiv", "objToSend")

        $.ajax({
            url: '@Url.Action("ChangeBalance", "Account")',
            type: 'POST',
            data: JSON.stringify(objToSend),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function(data) {
                if (data.status)
                    alert('@Resource.MessageConfirmed');
                else
                    alert(data.errorString);
            }
        });
        return true;
    }
</script>

<script type="text/javascript">
    function AsyncSubmitForm() {
        $("#imgLoading").show(500);
        $("#TableForm").fadeTo(0, 0.7);
        $.ajax({
            url: '@Url.Action("Accounts", "Management")',
            type: "POST",
            data: $("#TableForm").serialize(),
            success: function (data) {
                $("#imgLoading").hide();
                $("#TableForm").fadeTo(0, 1);
                $('#accountsTableContainer').html(data);
            },
            error: function (result) {
                $("#TableForm").fadeTo(0, 1);
                $("#imgLoading").hide();
            }
        });
    }
    
   
    $(document).ready(function () {
        $("#imgLoading").hide();
        
        $("#CurrentPageSize").change(function (e) {
            e.preventDefault();   
            AsyncSubmitForm();
        });

        $('a[id^="Sort"]').click(function (e) {
            var arg = $(this).attr('id');
            var actionParam = $("<input>").attr("type", "hidden").attr("name", "pageAccountAction").val("Sort");
            var argParam = $("<input>").attr("type", "hidden").attr("name", "pageAccountArg").val(arg);
            $("#TableForm").append($(actionParam));
            $("#TableForm").append($(argParam));
            
            e.preventDefault();
            AsyncSubmitForm();
        });

        $('a[id^="Paging"]').click(function(e) {
            var arg = $(this).attr('data-item');
            var actionParam = $("<input>").attr("type", "hidden").attr("name", "pageAccountAction").val("Paging");
            var argParam = $("<input>").attr("type", "hidden").attr("name", "pageAccountArg").val(arg);
            $("#TableForm").append($(actionParam));
            $("#TableForm").append($(argParam));

            e.preventDefault();
            AsyncSubmitForm();
        });
        
        FilterDialogInit('@Resource.TitleAccept', '@Resource.TitleClean');    
    });
    

    var config = {
        '.chzn-select': {},
        '.chzn-select-deselect': { allow_single_deselect: true },
        '.chzn-select-no-single': { disable_search_threshold: 10 },
        '.chzn-select-no-results': { no_results_text: '@Resource.MessageNoAccounts' },
        '.chzn-select-width': { width: "95%" }
    };
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
    $('.chzn-search').hide();
</script>
