@{
    ViewBag.Title = Resource.PageTitlePaymentTransferDetails;
    Layout = "~/Views/Pages/_PageLayout.cshtml";
}

@using TradeSharp.SiteAdmin.App_GlobalResources
@using TradeSharp.Contract.Entity
@model PaymentSystemTransfer

@section Header {
    <link rel="stylesheet" href="~/css/screen.css" type="text/css" media="screen" title="default" />
    <link rel="stylesheet" href="/css/button.css" type="text/css" media="screen" title="default" />
    <!--  jquery core -->
    <script src="~/js/jquery_1_10_3/jquery-1.9.1.js"></script>
    <script src="~/js/chosen.jquery.min.js" type="text/javascript"></script>
    <script src="@Url.Content("~/js/jquery/jquery.validate.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/js/jquery/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
    <link href="~/css/chosen.min.css" rel="stylesheet" />
    <!--[if IE]>
    <link rel="stylesheet" media="all" type="text/css" href="/css/pro_dropline_ie.css" />
    <![endif]-->
}


<!-- start content-outer ........................................................................................................................START -->
<div id="content-outer">
    <div id="content" style="width: 380px; margin:0 auto; min-width: 380px;">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "SubmitForm", name = "SubmitForm" }))
        {
            @Html.ValidationSummary(true)
            <table class="tableWithoutBorders">
                <tr>
                    <th style="text-align: right; padding: 10px">
                        @Html.LabelFor(x => x.Id)
                    </th>
                    <td>
                        @Html.DisplayTextFor(x => x.Id)
                        @Html.HiddenFor(x => x.Id) 
                    </td>
                    <td>
                        <span style="color: cadetblue; font-style: italic">@Resource.TextPaymentNumberComment</span>
                    </td>
                </tr>
                <tr>
                    <th style="text-align: right; padding: 10px">
                        @Html.LabelFor(x => x.Ammount)
                    </th>
                    <td>
                        @Html.DisplayTextFor(x => x.Ammount) <span style="color: darkcyan; font-weight: bold">@Model.Currency</span>
                        @Html.HiddenFor(x => x.Ammount)
                        @Html.HiddenFor(x => x.Currency)
                    </td>
                    <td>
                        <span style="color: cadetblue; font-style: italic">@Resource.TextPaymentAmountComment</span>
                    </td>
                </tr>
                <tr>
                    <th style="text-align: right; padding: 10px">
                        @Html.LabelFor(x => x.DateProcessed)
                    </th>
                    <td>
                        @Html.DisplayTextFor(x => x.DateProcessed)
                    </td>
                </tr>
                <tr>
                    <th style="text-align: right; padding: 10px">
                        @Html.LabelFor(x => x.DateValue)
                    </th>
                    <td>
                        @Html.DisplayTextFor(x => x.DateValue)
                    </td>
                </tr>
                <tr>
                    <th style="text-align: right; padding: 10px">
                        @Html.LabelFor(x => x.PaymentSys)
                    </th>
                    <td>
                        @if (Model.PaymentSys == PaymentSystem.Unknown)
                        {
                            @Html.DropDownListFor(x => x.UserPaymentSys,
                                                  new SelectList((System.Collections.IEnumerable) ViewBag.listUserPaySystem, "Value", "Text"),
                                                  new {@class = "chzn-select", @style = "width:220px;"}) 
                        }
                        else
                        {
                            <span>@Resource.TextPaymentTansferFor </span>
                            if (Model.UserPaymentSys.HasValue)
                            {   
                                <span style="color: darkcyan; font-weight: bold">
                                    @(new SelectList((System.Collections.IEnumerable)ViewBag.listUserPaySystem, "Value", "Text").
                                          FirstOrDefault(x => Model.UserPaymentSys != null && x.Value == Model.UserPaymentSys.Value.ToString()).Text)
                                </span> 
                            }
                            else
                            { <span style="color: darkcyan; font-weight: bold">@Model.PaymentSys</span> }
                                                                                                                    
                            <span>@Resource.TextChangeUserPaymentSysInDB @Html.DisplayTextFor(x => x.Id)</span>
                        }
                    </td>
                    <td class="ValidationMessage">   
                        <span style="color: red" id="WalletSelectValidator"></span>
                    </td>
                </tr>
                <tr>
                    <td style="padding: 10px">
                        @Html.ActionLink(Resource.TitleMakePayment, "PaymentTransferDetails", "Management", FormMethod.Post, new { @class = "ml-button-3", @id = "linkUpdate" })
                    </td>
                    <td colspan="2">
                        <span style="color: cadetblue; font-style: italic">@Resource.TextMakePaymentComment</span>
                    </td>
                    <td >
                    </td> 
                </tr>
                <tr>
                    <td style="padding: 10px">
                        @Html.ActionLink(Resource.TitleCancel, "PaymentTransferCancel", null, new { @class = "ml-button-3" })
                    </td>
                    <td >
                    </td> 
                </tr>
            </table>
        }
    </div>      
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $('#linkUpdate').click(function () {
            if ($('#Wallet_User').val() != 'null') {
                $('#WalletSelectValidator').html('');
                $('#SubmitForm').submit();
            } else {
                if ($('#Wallet_User').val() == 'null')
                    $('#WalletSelectValidator').html("@Resource.ErrorMessageWalletSelect");
            }         
            return false; 
        });
        
        $('#Wallet_User').change(function () {
            $('#WalletSelectValidator').html('');
        });
    });
    
    var config = {
        '.chzn-select': {},
        '.chzn-select-deselect': { allow_single_deselect: true },
        '.chzn-select-no-single': { disable_search_threshold: 10 },
        '.chzn-select-no-results': { no_results_text: '@Resource.ErrorMassageNothingFound' },
        '.chzn-select-width': { width: "95%" }
    };
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }

</script>
