<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListGlypth.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListGlypth.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACc
        BAAAAk1TRnQBSQFMAwEBAAEQAQABEAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMA
        ARADAAEBAQABIAYAARD/ACMAAw4BExgAAxYBHtwAASsCLAFDATUBSQGKAdADDwEUEAACJAElATYBOwFD
        AWcBygMYASLUAAMMARABQQFNAXUBtQEGATkBywH/ATgBTwGTAdUDDwEUCAADBAEGAUkBTQFhAacBEwEq
        AYoB/wEnATUBbAHkAxoBJdAAATEBSwGaAdMBDAE+AdAB+gELAUAB2QH/AQ4BPgHPAf8BOAFOAZEB1QMP
        ARQDJwE6AUYBUAFuAbcBGQE3AaIB/wEfATkBoAH/ARMBKgGHAf8BHQEtAXEB8dAAAToBTQGKAcUBAAE3
        AdwB/wEJAUEB3QH/AQsBPgHUAf8BDgE9AcoB/wE4AU0BjwHVAUUBUAFvAbMBFQE5AbAB/wEaAToBqgH/
        ARwBOQGhAf8BHAExAYUB9gFCAUcBXgG11AABQgFNAXABrAEBATgB2wH/AQoBQQHaAf8BCwE+AdEB/wEO
        ATwBxgH/ASEBQwGtAfMBFAE5AbUB/wEUATYBqgH/AQwBKQGSAf8BQAFHAWUBvQMaASTYAAFEAUsBYwGd
        AQEBNgHVAf8BCgE+AdYB/wENAT4BzQH/ARABPAHDAf8BEgE5AbkB/wEJASwBogH/AUQBSAFUAZQDIwE0
        3AADAQECAQABMgHXAf8BBwE9AdkB/wELAT4B0wH/AQ4BPQHLAf8BEQE7AcAB/wEAASABlwH/AxYBH9wA
        ASYCJwE6AT8BTgF8AbcBAAE6AeMB/wEGAUAB4QH/AQgBPgHXAf8BDQE+AdEB/wEQATwBxwH/AQcBLQGt
        Af8BMAFAAXkB1QMPARTUAAMGAQgBQQFNAXkBsAEAATwB7wH/AQQBRAHxAf8BBwFCAegB/wEJATQBxgH7
        AQIBLQHAAf8BDgE+AcwB/wESAT8BxwH/AQkBLgGrAf8BMAFAAXgB1QMQARXQAAE6AU0BjAHCAQ8BQgHi
        AfUBAAFGAfoB/wEDAUMB8gH/AQEBMgHZAf8BPAFIAXoBwQFCAUoBaAGsAQMBLQG/Af8BDgE9AcoB/wEU
        AT4BwwH/AQgBLgGmAf8BIwE3AYMB5tAAATUBTgGcAc4BAAEyAekB/wEAAUYC/wESAT0BzgHzAUMBSgFn
        AaQDHwEtBAABQgFKAWgBrAEDAS0BugH/AREBPwHIAf8BFwE3AagB9wE9AUcBaQG81AABQAFKAXcBtAEA
        ATQB6wH/AT8BSgF7AbgDEQEXDAABQgFKAWgBrAEEAS0BtwH/ATkBRwF3AcgDHQEq2AABQAFKAXcBtAEm
        AicBOgMCAQMQAAFCAUoBZwGsASYCJwE6AwIBA/8AyQABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEA
        AQEFAAGAFwAD/wEAAv8GAAH3Ae8GAAHjAccGAAHBAYMGAAHAAQMGAAHAAQMGAAHgAQMGAAHwAQcGAAHw
        AQ8GAAHgAQcGAAHAAQMGAAHAAQMGAAHAAYMGAAHhAcMGAAHxAeMGAAL/BgAL
</value>
  </data>
</root>