<html>
<head>
    <title>Терминал TradeSharp - Разбор выражений</title>
    <link rel="stylesheet" type="text/css" href="styles.css" />
    <style type="text/css">
        table.lightTable { border-width: 0 0 1px 1px; border-spacing: 0; border-collapse: collapse; border-style: solid; }
        table.lightTable tr td { margin: 0; padding: 4px; border-width: 1px 1px 0 0; border-style: solid; }
        tr.rowHeader { background-color: #BBFFAB; font-weight:bold; }
    </style>
</head>

<body>
    <img src="picts\main_logo.png" />
    <h1>Разбор выражений</h1>
    <p>
        В некоторых подсистемах терминала Trade# (
        <a href="pg_user_index.htm">технические индикаторы</a>, роботы, рейтинги доходности управления)
        можно встретить определение логического условия либо расчет значения показателя, заданный формулой.
        Не следует пугаться необычной, на первый взгляд, записи. Тем, кто знаком с языками программирования,
        формат записи выражений станет понятен на первом же примере (принятая нотация близка к таковой в языках C/C++/Java).
        Ниже подробно разобрано несколько реальных примеров.
    </p>

    <h3>Пользовательский индекс</h3>
    <p>
        Индикатор <a href="pg_user_index.htm">"пользовательский индекс"</a> строится на основании таких данных,
        как цены O, H, L, C текущей свечи, цены O, H, L, C предыдущей, пред-предыдущей и так далее свеч. Кроме того,
        в формулу могут входить такие параметры, как номер текущей свечи на графике, год, месяц ... минута времени
        открытия текущей свечи и значения цен закрытия других торгуемых активов на текущей и предыдущей свече. <br />
        Все эти значения в формуле являются переменными величинами, или просто - <b>переменными</b>.
    </p>

    <p>
        У каждой <b>переменной</b> есть свое имя. Например, цена high текущей свечи так и обозначена - <b>high</b>.
        Выражение может состоять только из имени переменной - буквально
    </p>
    <p class="excerpt">
        <b>high</b>
    <p/>
    <p>
        Результат демонстрирует рисунок:
    </p>

    <img alt="Простой график - цена high подчеркнута" src="picts\common\formula\formula_high.png" />

    <p>
        В каждой точке графика (на каждой свече) значение выражения - вершина ломаной линии коричневого цвета -
        равно текущей цене high.<br />
        Разумеется, формула может состоять не только из имени переменной (в данном примере - high). Формула
        объединяет <b>переменные</b> и <b>константы</b> с помощью <b>операторов</b>.
    </p>
     
    <p>
        Например, так будет выглядеть формула медианной цены (среднее между ценами high и low):
    </p>
    
    <p class="excerpt">
      (high + low) / 2
    </p>    
    
    <img alt="Простой график - цена (high + low)/2" src="picts\common\formula\formula_med.png" />
    
    <p>
        <b>high, low</b> - имена переменных, <b>2</b> - константа, <b>+, -, скобки</b> - операторы.
    </p>

    <p>
        Следующая формула описывает скользяющую среднюю с периодом 5:
    </p>

    <p class="excerpt">
        (close + close#1 + close#2 + close#3 + close#4) / 5
    </p> 

    <p>
        Здесь <b>close</b> - цена закрытия текущей свечи, <b>close#1</b> - переменная, значение которой будет равно
        цене закрытия предыдущей свечи, <b>close#2</b> - ... пред-предыдущей свечи и т.д. Рассмотрим формулу валютного индекса
        <b>EURX</b>:
    </p>

    <p class="excerpt">
        34.38805726*eurusd^0.3155*eurgbp^0.3056*eurjpy^0.1891*eurchf^0.1113
    </p>

    <p>
        В более привычной записи формула выглядит следующим образом:
    </p>
    <img alt="34.38805726*eurusd^0.3155*eurgbp^0.3056*eurjpy^0.1891*eurchf^0.1113" src="picts\common\formula\formula_eurx.png" />

    <p>
        Знак <b>^</b> ("шапочка") означает возведение в степень.<br />
        Формула быдет вычислена следующим образом: <i>текущая цена EURUSD (на момент закрытия текущей свечи) возводится в степень 0.3155,
            умножается на цену EURGBP, возведенную в степень 0.3056 ... умножается на константу 34.38805726.</i>
    </p>

    <h1>Общие сведения о формулах</h1>
    <p>
        Каждая формула включает имена переменных и/или константы, объединенные операторами. 
    </p>

    <h3>Переменные</h3>
    <p>
        Имя переменной должно начинаться с символа алфавита. Технически, допустимо, но не рекомендуется, начинать имя переменной 
        со знаков "_", ",", ".", ":" и некоторых других... что не рекомендуется. Абстрактные примеры корректных имен переменных, 
        через запятую: <br />
        <b>a, b, x, Profit2Loss, x2</b><br />
        Пробелы в имени переменной будут проигнорированы: фактически, выражение<br />
        <b>close - take profit</b> <br />
        трансформируется при вычислении в выражение<br />
        <b>close-takeprofit</b>
    </p>

    <h3>Константы</h3>
    <p>
        В приведенных примерах в формулы включались числа - константы:
    </p>
    <p class="excerpt">
        34.38805726*eurusd^0.3155*eurgbp^0.3056*eurjpy^0.1891*eurchf^0.1113
    </p>

    <p>
        Здесь константами являются числа <b>34.38805726, 0.3155, 0.3056, 0.1891, 0.1113</b>.<br />
        Кроме непосредственной записи числа, можно указать следующие константы:
    </p>

    <ul>
        <li>_pi (3.1415926536, число Пи)</li>
        <li>_e (2.718281828459, основание натурального логарифма)</li>
        <li>_r2 (1.414213562373, квадратный корень из двух)</li>
        <li>_true, (1, "истина" - "истиной" считается любое отличное от 0 значение)</li>
        <li>_false, (0, "ложь")</li>
    </ul>

    <h3>Операторы</h3>

    <table class="lightTable">
       <tr class="rowHeader">
          <td>Оператор</td><td>Приоритет</td><td>Пример</td><td>Описание</td>
       </tr>
        <tr><td colspan="4"><b>Арифметические</b></td></tr>
        <tr><td>+</td><td>2</td><td>a+1</td><td>Сложение операндов</td></tr>
        <tr><td>-</td><td>2</td><td>profit-loss</td><td>Разность операндов</td></tr>
        <tr><td>*</td><td>3</td><td>a*3</td><td>Умножение операндов</td></tr>
        <tr><td>/</td><td>3</td><td>a/b</td><td>Деление операндов</td></tr>
        <tr><td>^</td><td>4</td><td>a^2</td><td>Возведение в степень, слева от <b>^</b> - основание степени, справа - показатель</td></tr>

        <tr><td colspan="4"><b>Функции</b></td></tr>
        <tr><td>sign()</td><td>5</td><td>sign(a*b)</td><td>Знак аргумента (выражения в скобках), принимает значения [-1, 0, 1]</td></tr>
        <tr><td>sin()</td><td>5</td><td>sin(x + _pi)</td><td>Синус выражения в скобках (радианы)</td></tr>
        <tr><td>cos()</td><td>5</td><td>cos(0)</td><td>Косинус выражения в скобках (радианы)</td></tr>
        <tr><td>tan()</td><td>5</td><td>tan(x/y)</td><td>Тангенс выражения в скобках (радианы)</td></tr>
        <tr><td>ln()</td><td>5</td><td>ln(x + y^2)</td><td>Натуральный логарифм выражения в скобках</td></tr>
        <tr><td>lg()</td><td>5</td><td>lg(10*10*10)</td><td>Десятичный логарифм выражения в скобках</td></tr>

        <tr><td colspan="4"><b>Логические</b></td></tr>
        <tr><td>=</td><td>0</td><td>a=b+c</td><td>Сравнение операндов, 1 если равны, 0 если неравны</td></tr>
        <tr><td>!=</td><td>0</td><td>a!=3</td><td>Сравнение операндов, 0 если равны, 1 если неравны</td></tr>
        <tr><td>&gt;</td><td>0</td><td>a &gt; b</td><td>Сравнение операндов, 1 если левый операнд (a) больше правого (b), иначе - 0</td></tr>
        <tr><td>&lt;</td><td>0</td><td>a &lt; b + 1</td><td>Сравнение операндов, 1 если левый операнд (a) меньше правого (b + 1), иначе - 0</td></tr>
        <tr><td>&</td><td>1</td><td>a&b</td><td>Логическое <b>И</b>, 1 если оба операнда - "истина" (не равны 0), иначе - 0</td></tr>
        <tr><td>|</td><td>1</td><td>a|b</td><td>Логическое <b>ИЛИ</b>, 1 если хотя бы один из операндов - "истина" (не равны 0), иначе - 0</td></tr>        
        
        <tr><td colspan="4"><b>Прочие</b></td></tr>
        <tr><td>()</td><td>x</td><td>{(a+b)-(x+y)} * z</td><td>Скобки, обычные или фигурные, задают приоритет вложенных выражений.</td></tr>
        <tr><td>-</td><td>5</td><td>-b</td><td>Унарный оператор "минус" - инверсия знака переменной / выражения</td></tr>
        <tr><td>~</td><td>5</td><td>~(a&b)</td><td>Логическое отрицание, для аргумента "ложь" (0) равно "истине" (1), для аргумента "истина" 
            (любое значение, кроме 0) результат равен "ложь" (0)</td></tr>
        <tr><td>??</td><td>5</td><td>(x-y)??-1</td><td>Замена 0. Если левый операнд равен 0, результатом будет правый операнд, иначе 
            результат равен значению левого операнда</td></tr>
    </table>

    <h3>Приоритет операторов</h3>
    <p>
        В таблице для каждого оператора указан его приоритет (от 0 до 5). Чем выше приоритет, тем раньше выполняется действие,
        обозначенное оператором. Пример:
    </p>
    <p class="excerpt">
        a + b*2
    </p>

    <p>
        В данном примере два оператора: <b>+</b> и <b>*</b>. Приоритет оператора <b>*</b> равен 3 - выше, чем приоритет оператора 
        <b>+</b>. Поэтому, сначала будет выполнено умножение <b>b * 2</b>. Затем к результату будет прибавлено значение
        переменной a. Пример более сложного выражения:
    </p>
    <p class="excerpt">
        (y / x??y)^2
    </p>

    <p>
        Наивысший приоритет, равный 5, у оператора <b>??</b> (замена 0), к тому же, все выражение <b>y / x??y</b> находится в скобках. Оператор <b>??</b> 
            будет выполняться в первую очередь.<br />
        Допустим, <b>x</b> равен 0, <b>y</b> равен 3. <br />
        Сначала значение <b>x</b> (0) будет заменено значением <b>y</b> (3). Затем <b>y</b> (3) будет разделен на результат (3).<br />
        Наконец, полученный результат выражения в скобках (1) будет возведено в степень <b>2</b>, результатом всего выражения станет <b>1</b>.
    </p>

</body>
</html>