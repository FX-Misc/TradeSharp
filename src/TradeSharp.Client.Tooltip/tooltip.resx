<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="tip001" xml:space="preserve">
    <value>Для того, чтобы изменить масштаб графика по вертикальной оси, проведите курсором мыши вверх / вниз по вертикальной шкале, удерживая нажатой левую кнопку мыши. Если при этом нажата кнопка &lt;b&gt;Shift&lt;/b&gt;, график сместится вверх или вниз.</value>
  </data>
  <data name="tip002" xml:space="preserve">
    <value>Перемещая треугольный маркер на шкале времени с зажатой левой кнопкой мыши, можно установить смещение графика от правого края.</value>
  </data>
  <data name="tip003" xml:space="preserve">
    <value>В окне архива котировок (меню Настройки | Архив котировок) вы можете выбрать "любимые" инструменты для быстрого вызова. Котировки, отмеченные звездочкой, появятся в списке "Избранные" при &lt;b&gt;размещении нового ордера&lt;/b&gt;, &lt;b&gt;открытии окна&lt;/b&gt; графика.</value>
  </data>
  <data name="tip004" xml:space="preserve">
    <value>Для быстрого вызова окон размещения ордера, добавления индикатора, просмотра сделок по инструменту в меню Настройка | Параметры, вкладка "Быстрый вызов", выберите соответствующие опции. Иконки выбранных действий появятся на открытых в терминале графиках.</value>
  </data>
  <data name="tip005" xml:space="preserve">
    <value>При нажатой &lt;b&gt;средней кнопке мыши&lt;/b&gt; и перемещении по графику курсора, в точке курсора отобразится перекрестие, указывающее на цену и время в данной точке графика. Если при этом нажата кнопка &lt;b&gt;Shift&lt;/b&gt;, дополнительно отобразится высплывающая подсказка с параметрами японской свечи в данной точке графика.</value>
  </data>
  <data name="tip006" xml:space="preserve">
    <value>Графики, окна тестирования роботов, чат и прочие окна терминала упорядочиваются с помощью &lt;b&gt;закладок&lt;/b&gt; в нижней панели терминала. Для настройки закладок нажмите на кнопку с изображением стрелки, направленной вверх.</value>
  </data>
  <data name="tip007" xml:space="preserve">
    <value>В контекстном меню, появляющемся по нажатию правой кнопки мыши на графике, выберите пункт "Синхр. котировки...". В открывшемся окне выберите интервал времени (количество дней), за который история котировок будет актуализирована и отображена на графиках данного инструмента.</value>
  </data>
  <data name="tip008" xml:space="preserve">
    <value>В окне "Счет" (команда меню Вид | Счет) на вкладке "Позиции" верхняя таблица отображает &lt;b&gt;суммарные&lt;/b&gt; ордера по каждому торгуемому активу. Обратите внимание на поля "Плечо", "Экспозиция", в определенном смысле характеризующие &lt;b&gt;риск&lt;/b&gt; спекулятивного портфеля. Одной командой во всплывающем меню верхней таблицы можно закрыть или модифицировать все ордера по одному инструменту. </value>
  </data>
  <data name="tip009" xml:space="preserve">
    <value>Включив опцию "дополнительные параметры" при открытии или редактировании ордера, можно указать до 4-х уровней трейлинга StopLoss, контролируемого сервером. Здесь, в примере, запись 97.635 - 50 - 10 означает следующее: при достижении отметки &lt;b&gt;+50&lt;/b&gt; ценовых пунктов (соответствующей цене 97.635) от точки входа (97.135) StopLoss по сделке будет перенесен на отметку &lt;b&gt;+10&lt;/b&gt; пунктов от точки входа (97.235).</value>
  </data>
  <data name="tip010" xml:space="preserve">
    <value>С помощью кнопок "Быстро купить" / "Быстро продать" вы можете совершить сделку двумя кликами мыши на графике торгуемого инструмента. Кнопки быстрого вызова настраиваются командой меню Настройка | Параметры, вкладка "Быстрый вызов".</value>
  </data>
  <data name="tip011" xml:space="preserve">
    <value>Таймфрейм выбранного графика можно поменять в выпадающем списке. Процедура выполняется практически &lt;b&gt;мгновенно&lt;/b&gt;, так как терминал не загружает японские свечи (OHLC) из сети, а просто перестраивает новые свечи из минутных котировок (m1).</value>
  </data>
  <data name="tip012" xml:space="preserve">
    <value>Вы можете настроить собственные таймфреймы командой меню Настройка | Параметры, вкладка "Свечи". Можно указать таймфрейм переменной длительности. Например, первая свеча открывается в 00:00 и закрывается в 15:00, вторая свеча открывается в 15:00 и закрывается в 00:00.</value>
  </data>
  <data name="tip013" xml:space="preserve">
    <value>При открытии нового ордера его объем может быть рассчитан &lt;b&gt;автоматически&lt;/b&gt; исходя из настроек, произведенных в окне "Настройки риска...". Окно вызывается командой меню Настройки | Риск.</value>
  </data>
  <data name="tip014" xml:space="preserve">
    <value>Командой меню &lt;b&gt;Вид | Инструменты&lt;/b&gt; включается отображение панели закладок, предоставляющей краткую сводку и набор часто используемых операций по счету, котировкам, открытым ордерам и техническим индикаторам.</value>
  </data>
  <data name="tip015" xml:space="preserve">
    <value>Технические индикаторы могут быть построены по данным других индикаторов. Например, индикатор "Дивергенции" стрелками указывает дивергенции двух рядов данных - в этом примере -  рыночного курса и индикатора Ренко. В поле "Панель отрисовки" задается окно,в котором строится индикатор - собственное окно, основное окно графика или окно другого индикатора.</value>
  </data>
  <data name="tip016" xml:space="preserve">
    <value>В контекстном меню, открываемом нажатием правой кнопки мыши на графике, можно включить отображение ордеров - как открытых на данный момент, так и закрытых сделок. Нажатием левой кнопки мыши по значку ордера можно вызвать меню редактирования ордера. На графике ордера визуализируются индикатором "Торговые операции".</value>
  </data>
  <data name="tip017" xml:space="preserve">
    <value>Выбрав открытый ордер на графике (индикатор "Торговые операции"), левой кнопкой мыши можно "перетащить" цену StopLoss / TakeProfit, если такой ордер определен для позиции. Справа от текущей (последней) свечи рисуются StopLoss - TakeProfit ордера для &lt;b&gt;суммарной&lt;/b&gt; позиции по торгуемому инструменту. Их также можно &lt;b&gt;изменить&lt;/b&gt;, "перетащив" мышью. Если цена StopLoss / TakeProfit не видна (выше верхней либо ниже нижней границ графика), можно масштабировать график движением указателя мыши по вертикальной (ценовой) шкале (опционально - с нажатой кнопкой Shift).</value>
  </data>
  <data name="tip018" xml:space="preserve">
    <value>Вы можете настроить интерфейс терминала для &lt;b&gt;быстрого доступа&lt;/b&gt; к частым операциям. Командой меню Настройка | Панель инструментов вызывается окно, на вкладке "Кнопки" которого можно выбрать и настроить параметры графических построений (линий тренда, комментариев на графике, эллипсов и т.д.). Для каждого графического построения можно определить некоторые предустановленные параметры. К примеру, можно создать две кнопки для линий тренда: линии тренда, строящиеся как линии, и линии тренда в виде отрезков. </value>
  </data>
  <data name="tip019" xml:space="preserve">
    <value>В настройках кнопок инструментальной панели (меню Настройка | Панель инструментов), кнопки можно объединить в &lt;b&gt;группы&lt;/b&gt; (пункт контекстного меню "Добавить группу"). Такая группировка инструментальных кнопок графических построений существенно экономит место на панели инструментов.</value>
  </data>
  <data name="tip020" xml:space="preserve">
    <value>Типовые действия с ордерами и графиками можно автоматизировать сценариями (&lt;b&gt;скриптами&lt;/b&gt;). Скрипты настраиваются в окне, вызываемом командой меню Торговля | Скрипты. Вызов скрипта можно произвести из контекстного меню в окне графика либо командой меню Торговля | Скрипт ...</value>
  </data>
  <data name="tip021" xml:space="preserve">
    <value>Для сценария можно задать правила &lt;b&gt;автоматического исполнения&lt;/b&gt; (триггер): по обновлению котировки, открытию, закрытию, модификации ордера либо по условию, описанному формулой. Логика скрипта может определять дополнительные условия для его исполнения. Например, скрипт типа "Сигнал" имеет настраиваемые ограничения на количество и периодичность повторений выбранного звукового сигнала.</value>
  </data>
  <data name="tip022" xml:space="preserve">
    <value>В заголовке окна терминала отображается имя пользователя - владельца подключенного счета и актуальный &lt;b&gt;баланс&lt;/b&gt; счета, обновляющийся с периодичностью порядка 1 раза в секунду. В заголовке окна графика отображается суммарная &lt;b&gt;открытая позиция&lt;/b&gt; по данному инструменту и ее текущий результат в ценовых пунктах.</value>
  </data>
  <data name="tip023" xml:space="preserve">
    <value>Текущие котировки отображает окно, вызываемое командой меню Вид | Котировки. Нажатием на "кнопки" Bid / Ask открывается соответствующий &lt;b&gt;ордер&lt;/b&gt; (продажа / покупка). Объем ордера задается в выпадающем списке между "кнопками" Bid / Ask.</value>
  </data>
  <data name="tip024" xml:space="preserve">
    <value>В окне, вызываемом командой меню Настройки | Настройки графиков можно задать &lt;b&gt;цветовую схему&lt;/b&gt; графика. При смене цветовой схемы цвета графических построений будут автоматически скорректированы для обеспечения контрастности.</value>
  </data>
  <data name="tip025" xml:space="preserve">
    <value>&lt;b&gt;Торговые роботы&lt;/b&gt; включаются кнопкой на панели инструментов (треугольник, направленный вправо). Настройка роботов производится в окне, вызываемой командой меню Торговля | Роботы | Портфель роботов.</value>
  </data>
  <data name="tip026" xml:space="preserve">
    <value>Бэктестинг роботов активируется командой меню Торговля | Роботы | Тестер роботов. Обратите внимание - тестирование на истории котировок может производиться для &lt;b&gt;нескольких торговых роботов одновременно&lt;/b&gt;. В результатах тестирования доступен график баланса (средств) моделируемого счета.</value>
  </data>
  <data name="tip027" xml:space="preserve">
    <value>По завершению бэктеста результаты тестирования можно &lt;b&gt;показать на графике&lt;/b&gt; / на нескольких графиках, если тестировались несколько роботов одновременно.</value>
  </data>
  <data name="tip028" xml:space="preserve">
    <value>Среди характеристик управления счетом приводятся, как правило, два графика: график &lt;b&gt;баланса счета&lt;/b&gt; (учитывающий результат открытых на каждый момент времени сделок) и &lt;b&gt;график доходности на $1000&lt;/b&gt;. График доходности на "виртуальную" $1000, как правило, более показателен: его тенденции не искажаются вводами / выводами средств. В примере красная кривая - кривая баланса, зеленая кривая - кривая доходности на $1000. В кривой доходности на $1000 учтено существенное пополнение депозита в середине отображаемого интервала времени.</value>
  </data>
  <data name="tip029" xml:space="preserve">
    <value>При расчете показателей эффективности управления капиталом в терминале TradeSharp всегда используется кривая &lt;b&gt;текущего&lt;/b&gt; баланса (средств), отражающая, в том числе, прибыль / убыток по открытым на каждый момент времени сделкам. Таким образом, modus operandi трейдера, предпочитающего, по возможности, не закрывать сделку с убытком, не исказит статистику.</value>
  </data>
  <data name="tip030" xml:space="preserve">
    <value>В окне "Счет" (меню Вид | Счет) нажатием кнопки "Оценка риска" открывается окно "Оценка рисков по портфелю". На основе исторических данных определяются параметры волатильности рынка и корреляции изменений цен торгуемых активов. Эти параметры устанавливаются для модели случайного блуждания. Затем, в ходе имитационных экспериментов, в течение нескольких секунд рассчитываются вероятности отклонения стоимости портфеля на N% во времени. График показывает оценку величины &lt;b&gt;потерь, %&lt;/b&gt;, ожидаемых с вероятностями 40%, 10% и 5%.</value>
  </data>
  <data name="tip031" xml:space="preserve">
    <value>В терминал TradeSharp интегрирован &lt;b&gt;чат-клиент&lt;/b&gt;. Авторизовавшесь в терминале вы автоматически получаете учетную запись чат-сервера. Чат можно вызвать кнопкой "окно чата" на инструментальной панеле (настраивается командой меню Настройки | Панель инструментов, вкладка "Системные кнопки") либо в правой половине статусной панели терминала.</value>
  </data>
  <data name="tip032" xml:space="preserve">
    <value>Для навигации по графику - измерения "размаха" тренда, начальной и конечной точки в координатах время - цена, используйте инструмент "Измерение".</value>
  </data>
</root>