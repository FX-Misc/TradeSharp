//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18052
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TradeSharp.Client.Tooltip {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class tooltip {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal tooltip() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TradeSharp.Client.Tooltip.tooltip", typeof(tooltip).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для того, чтобы изменить масштаб графика по вертикальной оси, проведите курсором мыши вверх / вниз по вертикальной шкале, удерживая нажатой левую кнопку мыши. Если при этом нажата кнопка &lt;b&gt;Shift&lt;/b&gt;, график сместится вверх или вниз..
        /// </summary>
        internal static string tip001 {
            get {
                return ResourceManager.GetString("tip001", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Перемещая треугольный маркер на шкале времени с зажатой левой кнопкой мыши, можно установить смещение графика от правого края..
        /// </summary>
        internal static string tip002 {
            get {
                return ResourceManager.GetString("tip002", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В окне архива котировок (меню Настройки | Архив котировок) вы можете выбрать &quot;любимые&quot; инструменты для быстрого вызова. Котировки, отмеченные звездочкой, появятся в списке &quot;Избранные&quot; при &lt;b&gt;размещении нового ордера&lt;/b&gt;, &lt;b&gt;открытии окна&lt;/b&gt; графика..
        /// </summary>
        internal static string tip003 {
            get {
                return ResourceManager.GetString("tip003", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для быстрого вызова окон размещения ордера, добавления индикатора, просмотра сделок по инструменту в меню Настройка | Параметры, вкладка &quot;Быстрый вызов&quot;, выберите соответствующие опции. Иконки выбранных действий появятся на открытых в терминале графиках..
        /// </summary>
        internal static string tip004 {
            get {
                return ResourceManager.GetString("tip004", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на При нажатой &lt;b&gt;средней кнопке мыши&lt;/b&gt; и перемещении по графику курсора, в точке курсора отобразится перекрестие, указывающее на цену и время в данной точке графика. Если при этом нажата кнопка &lt;b&gt;Shift&lt;/b&gt;, дополнительно отобразится высплывающая подсказка с параметрами японской свечи в данной точке графика..
        /// </summary>
        internal static string tip005 {
            get {
                return ResourceManager.GetString("tip005", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Графики, окна тестирования роботов, чат и прочие окна терминала упорядочиваются с помощью &lt;b&gt;закладок&lt;/b&gt; в нижней панели терминала. Для настройки закладок нажмите на кнопку с изображением стрелки, направленной вверх..
        /// </summary>
        internal static string tip006 {
            get {
                return ResourceManager.GetString("tip006", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В контекстном меню, появляющемся по нажатию правой кнопки мыши на графике, выберите пункт &quot;Синхр. котировки...&quot;. В открывшемся окне выберите интервал времени (количество дней), за который история котировок будет актуализирована и отображена на графиках данного инструмента..
        /// </summary>
        internal static string tip007 {
            get {
                return ResourceManager.GetString("tip007", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В окне &quot;Счет&quot; (команда меню Вид | Счет) на вкладке &quot;Позиции&quot; верхняя таблица отображает &lt;b&gt;суммарные&lt;/b&gt; ордера по каждому торгуемому активу. Обратите внимание на поля &quot;Плечо&quot;, &quot;Экспозиция&quot;, в определенном смысле характеризующие &lt;b&gt;риск&lt;/b&gt; спекулятивного портфеля. Одной командой во всплывающем меню верхней таблицы можно закрыть или модифицировать все ордера по одному инструменту. .
        /// </summary>
        internal static string tip008 {
            get {
                return ResourceManager.GetString("tip008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Включив опцию &quot;дополнительные параметры&quot; при открытии или редактировании ордера, можно указать до 4-х уровней трейлинга StopLoss, контролируемого сервером. Здесь, в примере, запись 97.635 - 50 - 10 означает следующее: при достижении отметки &lt;b&gt;+50&lt;/b&gt; ценовых пунктов (соответствующей цене 97.635) от точки входа (97.135) StopLoss по сделке будет перенесен на отметку &lt;b&gt;+10&lt;/b&gt; пунктов от точки входа (97.235)..
        /// </summary>
        internal static string tip009 {
            get {
                return ResourceManager.GetString("tip009", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на С помощью кнопок &quot;Быстро купить&quot; / &quot;Быстро продать&quot; вы можете совершить сделку двумя кликами мыши на графике торгуемого инструмента. Кнопки быстрого вызова настраиваются командой меню Настройка | Параметры, вкладка &quot;Быстрый вызов&quot;..
        /// </summary>
        internal static string tip010 {
            get {
                return ResourceManager.GetString("tip010", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Таймфрейм выбранного графика можно поменять в выпадающем списке. Процедура выполняется практически &lt;b&gt;мгновенно&lt;/b&gt;, так как терминал не загружает японские свечи (OHLC) из сети, а просто перестраивает новые свечи из минутных котировок (m1)..
        /// </summary>
        internal static string tip011 {
            get {
                return ResourceManager.GetString("tip011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вы можете настроить собственные таймфреймы командой меню Настройка | Параметры, вкладка &quot;Свечи&quot;. Можно указать таймфрейм переменной длительности. Например, первая свеча открывается в 00:00 и закрывается в 15:00, вторая свеча открывается в 15:00 и закрывается в 00:00..
        /// </summary>
        internal static string tip012 {
            get {
                return ResourceManager.GetString("tip012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на При открытии нового ордера его объем может быть рассчитан &lt;b&gt;автоматически&lt;/b&gt; исходя из настроек, произведенных в окне &quot;Настройки риска...&quot;. Окно вызывается командой меню Настройки | Риск..
        /// </summary>
        internal static string tip013 {
            get {
                return ResourceManager.GetString("tip013", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Командой меню &lt;b&gt;Вид | Инструменты&lt;/b&gt; включается отображение панели закладок, предоставляющей краткую сводку и набор часто используемых операций по счету, котировкам, открытым ордерам и техническим индикаторам..
        /// </summary>
        internal static string tip014 {
            get {
                return ResourceManager.GetString("tip014", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Технические индикаторы могут быть построены по данным других индикаторов. Например, индикатор &quot;Дивергенции&quot; стрелками указывает дивергенции двух рядов данных - в этом примере -  рыночного курса и индикатора Ренко. В поле &quot;Панель отрисовки&quot; задается окно,в котором строится индикатор - собственное окно, основное окно графика или окно другого индикатора..
        /// </summary>
        internal static string tip015 {
            get {
                return ResourceManager.GetString("tip015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В контекстном меню, открываемом нажатием правой кнопки мыши на графике, можно включить отображение ордеров - как открытых на данный момент, так и закрытых сделок. Нажатием левой кнопки мыши по значку ордера можно вызвать меню редактирования ордера. На графике ордера визуализируются индикатором &quot;Торговые операции&quot;..
        /// </summary>
        internal static string tip016 {
            get {
                return ResourceManager.GetString("tip016", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выбрав открытый ордер на графике (индикатор &quot;Торговые операции&quot;), левой кнопкой мыши можно &quot;перетащить&quot; цену StopLoss / TakeProfit, если такой ордер определен для позиции. Справа от текущей (последней) свечи рисуются StopLoss - TakeProfit ордера для &lt;b&gt;суммарной&lt;/b&gt; позиции по торгуемому инструменту. Их также можно &lt;b&gt;изменить&lt;/b&gt;, &quot;перетащив&quot; мышью. Если цена StopLoss / TakeProfit не видна (выше верхней либо ниже нижней границ графика), можно масштабировать график движением указателя мыши по вертикальной ( [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string tip017 {
            get {
                return ResourceManager.GetString("tip017", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вы можете настроить интерфейс терминала для &lt;b&gt;быстрого доступа&lt;/b&gt; к частым операциям. Командой меню Настройка | Панель инструментов вызывается окно, на вкладке &quot;Кнопки&quot; которого можно выбрать и настроить параметры графических построений (линий тренда, комментариев на графике, эллипсов и т.д.). Для каждого графического построения можно определить некоторые предустановленные параметры. К примеру, можно создать две кнопки для линий тренда: линии тренда, строящиеся как линии, и линии тренда в виде отрезков. .
        /// </summary>
        internal static string tip018 {
            get {
                return ResourceManager.GetString("tip018", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В настройках кнопок инструментальной панели (меню Настройка | Панель инструментов), кнопки можно объединить в &lt;b&gt;группы&lt;/b&gt; (пункт контекстного меню &quot;Добавить группу&quot;). Такая группировка инструментальных кнопок графических построений существенно экономит место на панели инструментов..
        /// </summary>
        internal static string tip019 {
            get {
                return ResourceManager.GetString("tip019", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Типовые действия с ордерами и графиками можно автоматизировать сценариями (&lt;b&gt;скриптами&lt;/b&gt;). Скрипты настраиваются в окне, вызываемом командой меню Торговля | Скрипты. Вызов скрипта можно произвести из контекстного меню в окне графика либо командой меню Торговля | Скрипт ....
        /// </summary>
        internal static string tip020 {
            get {
                return ResourceManager.GetString("tip020", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для сценария можно задать правила &lt;b&gt;автоматического исполнения&lt;/b&gt; (триггер): по обновлению котировки, открытию, закрытию, модификации ордера либо по условию, описанному формулой. Логика скрипта может определять дополнительные условия для его исполнения. Например, скрипт типа &quot;Сигнал&quot; имеет настраиваемые ограничения на количество и периодичность повторений выбранного звукового сигнала..
        /// </summary>
        internal static string tip021 {
            get {
                return ResourceManager.GetString("tip021", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В заголовке окна терминала отображается имя пользователя - владельца подключенного счета и актуальный &lt;b&gt;баланс&lt;/b&gt; счета, обновляющийся с периодичностью порядка 1 раза в секунду. В заголовке окна графика отображается суммарная &lt;b&gt;открытая позиция&lt;/b&gt; по данному инструменту и ее текущий результат в ценовых пунктах..
        /// </summary>
        internal static string tip022 {
            get {
                return ResourceManager.GetString("tip022", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Текущие котировки отображает окно, вызываемое командой меню Вид | Котировки. Нажатием на &quot;кнопки&quot; Bid / Ask открывается соответствующий &lt;b&gt;ордер&lt;/b&gt; (продажа / покупка). Объем ордера задается в выпадающем списке между &quot;кнопками&quot; Bid / Ask..
        /// </summary>
        internal static string tip023 {
            get {
                return ResourceManager.GetString("tip023", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В окне, вызываемом командой меню Настройки | Настройки графиков можно задать &lt;b&gt;цветовую схему&lt;/b&gt; графика. При смене цветовой схемы цвета графических построений будут автоматически скорректированы для обеспечения контрастности..
        /// </summary>
        internal static string tip024 {
            get {
                return ResourceManager.GetString("tip024", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;b&gt;Торговые роботы&lt;/b&gt; включаются кнопкой на панели инструментов (треугольник, направленный вправо). Настройка роботов производится в окне, вызываемой командой меню Торговля | Роботы | Портфель роботов..
        /// </summary>
        internal static string tip025 {
            get {
                return ResourceManager.GetString("tip025", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Бэктестинг роботов активируется командой меню Торговля | Роботы | Тестер роботов. Обратите внимание - тестирование на истории котировок может производиться для &lt;b&gt;нескольких торговых роботов одновременно&lt;/b&gt;. В результатах тестирования доступен график баланса (средств) моделируемого счета..
        /// </summary>
        internal static string tip026 {
            get {
                return ResourceManager.GetString("tip026", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на По завершению бэктеста результаты тестирования можно &lt;b&gt;показать на графике&lt;/b&gt; / на нескольких графиках, если тестировались несколько роботов одновременно..
        /// </summary>
        internal static string tip027 {
            get {
                return ResourceManager.GetString("tip027", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Среди характеристик управления счетом приводятся, как правило, два графика: график &lt;b&gt;баланса счета&lt;/b&gt; (учитывающий результат открытых на каждый момент времени сделок) и &lt;b&gt;график доходности на $1000&lt;/b&gt;. График доходности на &quot;виртуальную&quot; $1000, как правило, более показателен: его тенденции не искажаются вводами / выводами средств. В примере красная кривая - кривая баланса, зеленая кривая - кривая доходности на $1000. В кривой доходности на $1000 учтено существенное пополнение депозита в середине отобража [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string tip028 {
            get {
                return ResourceManager.GetString("tip028", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на При расчете показателей эффективности управления капиталом в терминале TradeSharp всегда используется кривая &lt;b&gt;текущего&lt;/b&gt; баланса (средств), отражающая, в том числе, прибыль / убыток по открытым на каждый момент времени сделкам. Таким образом, modus operandi трейдера, предпочитающего, по возможности, не закрывать сделку с убытком, не исказит статистику..
        /// </summary>
        internal static string tip029 {
            get {
                return ResourceManager.GetString("tip029", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В окне &quot;Счет&quot; (меню Вид | Счет) нажатием кнопки &quot;Оценка риска&quot; открывается окно &quot;Оценка рисков по портфелю&quot;. На основе исторических данных определяются параметры волатильности рынка и корреляции изменений цен торгуемых активов. Эти параметры устанавливаются для модели случайного блуждания. Затем, в ходе имитационных экспериментов, в течение нескольких секунд рассчитываются вероятности отклонения стоимости портфеля на N% во времени. График показывает оценку величины &lt;b&gt;потерь, %&lt;/b&gt;, ожидаемых с вероятностям [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string tip030 {
            get {
                return ResourceManager.GetString("tip030", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В терминал TradeSharp интегрирован &lt;b&gt;чат-клиент&lt;/b&gt;. Авторизовавшесь в терминале вы автоматически получаете учетную запись чат-сервера. Чат можно вызвать кнопкой &quot;окно чата&quot; на инструментальной панеле (настраивается командой меню Настройки | Панель инструментов, вкладка &quot;Системные кнопки&quot;) либо в правой половине статусной панели терминала..
        /// </summary>
        internal static string tip031 {
            get {
                return ResourceManager.GetString("tip031", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для навигации по графику - измерения &quot;размаха&quot; тренда, начальной и конечной точки в координатах время - цена, используйте инструмент &quot;Измерение&quot;..
        /// </summary>
        internal static string tip032 {
            get {
                return ResourceManager.GetString("tip032", resourceCulture);
            }
        }
    }
}
